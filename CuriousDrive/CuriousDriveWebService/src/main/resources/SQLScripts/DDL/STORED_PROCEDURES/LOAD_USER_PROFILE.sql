USE `CURIOSITE`;
DROP procedure IF EXISTS `LOAD_USER_PROFILE`;

DELIMITER $$
USE `CURIOSITE`$$
CREATE PROCEDURE `LOAD_USER_PROFILE` (IN aintUserId INT)
BEGIN

CREATE TEMPORARY TABLE POINTS (
POINTS INT UNSIGNED NOT NULL DEFAULT 0,
TYPE VARCHAR(50) NOT NULL,
USER_ID INT UNSIGNED NOT NULL DEFAULT 0
);

CREATE TEMPORARY TABLE POINTS_RANKED (
TOTAL_POINTS INT UNSIGNED NOT NULL DEFAULT 0,
USER_ID INT UNSIGNED NOT NULL DEFAULT 0
);

CREATE TEMPORARY TABLE USERS_RANK (
TOTAL_POINTS INT UNSIGNED NOT NULL DEFAULT 0,
USER_ID INT UNSIGNED NOT NULL DEFAULT 0,
RANK INT UNSIGNED NOT NULL DEFAULT 0
);

-- FIND UP VOTES ON THE QUESTIONS 
INSERT INTO POINTS
SELECT COUNT(*) * 10 AS POINTS,'QUESTIONS' AS TYPE,TQ.CREATED_BY AS USER_ID 
FROM TRAN_QUESTIONS TQ 
INNER JOIN TRAN_POST_VOTES TPV ON TPV.SUBSYSTEM_REFERENCE_ID = TQ.QUESTION_ID
WHERE TPV.SUBSYSTEM_VALUE = 'PVTQ'
AND TPV.VOTE_VALUE = 'VTUP'
GROUP BY TQ.CREATED_BY;

-- FIND UP VOTES ON THE QUESTION ANSWERS
INSERT INTO POINTS
SELECT COUNT(*) * 5 AS POINTS,'ANSWERS' AS TYPE,TQA.CREATED_BY AS USER_ID 
FROM TRAN_QUESTION_ANSWERS TQA 
LEFT OUTER JOIN TRAN_POST_VOTES TPV ON TPV.SUBSYSTEM_REFERENCE_ID = TQA.QUESTION_ID
WHERE TPV.SUBSYSTEM_VALUE = 'PVTA'
AND TPV.VOTE_VALUE = 'VTUP'
GROUP BY TQA.CREATED_BY;

INSERT INTO POINTS_RANKED
SELECT SUM(POINTS) AS TOTAL_POINTS,USER_ID
FROM POINTS
GROUP BY USER_ID;

INSERT INTO POINTS_RANKED
SELECT 0 AS TOTAL_POINTS,USER_ID FROM SYS_USERS 
WHERE USER_ID NOT IN (SELECT USER_ID FROM POINTS)
ORDER BY USER_ID DESC;

INSERT INTO USERS_RANK
SELECT TOTAL_POINTS,USER_ID,@ROWNUM := @ROWNUM + 1 AS RANK 
FROM POINTS_RANKED,(SELECT @ROWNUM := 0) R
ORDER BY TOTAL_POINTS DESC;

SELECT * FROM USERS_RANK UR 
INNER JOIN SYS_USERS SU ON SU.USER_ID = UR.USER_ID
WHERE UR.USER_ID = aintUserId;

DROP TABLE POINTS;
DROP TABLE POINTS_RANKED;
DROP TABLE USERS_RANK;

END
$$

DELIMITER ;

