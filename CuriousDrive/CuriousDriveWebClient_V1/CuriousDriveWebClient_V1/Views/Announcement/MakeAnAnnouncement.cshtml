@model CuriousDriveWebClient.MakeAnAnnouncementViewModel;

@{
    ViewBag.Title = "Make an announcement - Curious Drive";
}

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<script src="~/Scripts/tinymce/tinymce.min.js"></script>

<link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css" rel="Stylesheet" type="text/css" />

<script type="text/javascript">

    var counterClasses = 0;
    var counterUsers = 0;
    var classes = [];
    var users = [];

    function removeClass(classId) {

        for (incrementer = 0; incrementer < classes.length; incrementer++) {
            var fields = classes[incrementer].split('#')
            if (fields[1] == classId)
            {
                document.getElementById('rowClasses').removeChild(document.getElementById("td" + classId));
                classes.splice(incrementer, 1);

                var txtClassIdText = document.getElementById('txtClassIds').value;
                txtClassIdText = txtClassIdText.replace(classId, '');
                document.getElementById('txtClassIds').value = txtClassIdText;
            }
        }
    }

    function removeUser(userId) {

        for (incrementer = 0; incrementer < users.length; incrementer++) {
            var fields = users[incrementer].split('#')
            if (fields[1] == userId) {
                document.getElementById('rowUsers').removeChild(document.getElementById("td" + userId));
                users.splice(incrementer, 1);

                var txtUserIdText = document.getElementById('txtUserTags').value;
                txtUserIdText = txtUserIdText.replace(userId, '');
                document.getElementById('txtUserTags').value = txtUserIdText;
            }
        }
    }

    $(function () {

            $("#txtClasses").autocomplete({

                source: function (request, response) {
                    $.ajax({
                        url : '@Url.Action("AutoCompleteClasses", "Announcement")',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {

                    var lblExists = false;

                    for (incrementer = 0; incrementer < classes.length; incrementer++) {
                        if (classes[incrementer] == i.item.label + '#' + i.item.val)
                            lblExists = true;
                    }

                    if (!lblExists)
                    {
                        var classesGroup = $('#rowClasses');
                        classesGroup.append('<td id ="td' + i.item.val + '" style="background-color:cyan">&nbsp; <label>' + i.item.label + '</label> '
                            + '<input type="button" name="btn' + counterClasses + '" id="btn' + counterClasses + '" value ="x" onclick="removeClass(' + i.item.val + ')"></td> <td>&nbsp;</td>');

                        classes.push(i.item.label + '#' + i.item.val);
                        counterClasses++;

                        var txtClassIds = $('#txtClassIds').val();
                        if (txtClassIds != '')
                            $('#txtClassIds').val(txtClassIds + ',' + i.item.val);
                        else
                            $('#txtClassIds').val(i.item.val);
                    }

                    this.value = '';
                    return false;
                },
                minLength: 0
            });
    });

    $(function () {

            $("#txtUsers").autocomplete({

                source: function (request, response) {
                    $.ajax({
                        url : '@Url.Action("AutoCompleteUsers", "Announcement")',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            //alert(response.responseText);
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {

                    var lblExists = false;

                    for (incrementer = 0; incrementer < users.length; incrementer++) {
                        if (users[incrementer] == i.item.label + '#' + i.item.val)
                            lblExists = true;
                    }

                    if (!lblExists)
                    {
                        var usersGroup = $('#rowUsers');
                        usersGroup.append('<td id ="td' + i.item.val + '" style="background-color:cyan">&nbsp; <label>' + i.item.label + '</label> '
                            + '<input type="button" value ="x" onclick=removeUser("'+ i.item.val +'")></td> <td>&nbsp;</td>');

                        users.push(i.item.label + '#' + i.item.val);
                        counterUsers++;

                        var txtUserTags = $('#txtUserTags').val();
                        if (txtUserTags != '')
                            $('#txtUserTags').val(txtUserTags + ',' + i.item.val);
                        else
                            $('#txtUserTags').val(i.item.val);
                    }

                    this.value = '';
                    return false;
                },
                minLength: 0
            });
    });

    // Initialize your tinyMCE Editor with your preferred options
    tinymce.init({
        selector: 'textarea',
        menubar: false,
        branding: false,
        plugins: [
            'advlist autolink lists link image charmap print preview anchor textcolor',
            'searchreplace visualblocks code fullscreen',
            'insertdatetime media table contextmenu paste code wordcount'
        ],
        toolbar: 'insert | undo redo |  formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat',
        content_css: [
            '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
            '//www.tinymce.com/css/codepen.min.css']
    });
</script>


@using (Html.BeginForm("MakeAnAnnouncement", "Announcement", FormMethod.Post, new { @class = "form-horizontal row card", role = "form" }))
{
    @Html.AntiForgeryToken()    

    <div class="row">
        <form name="askAnnouncementForm" class="form-horizontal" role="form" novalidate>
            <div class="form-group col-lg-12 col-12">
                <div class="col-lg-12 col-12">
                    <br />
                </div>

                <div class="col-lg-12 col-12">
                    <p class="bold-largest">Make an Announcement</p>
                    <p>
                        You can make announcements for your students and user groups. It's the best way to share information with everyone in the community.
                    </p>
                    <hr />
                </div>

                <div class="col-lg-12">
                    @Html.TextBoxFor(m => m.announcementTitle, new { placeholder = "announcement title", @class = "form-control" })
                    <br />
                </div>

                <div class="col-lg-12">
                    @Html.TextAreaFor(m => m.announcementHtml, new { @class = "form-control col-sm-16" })
                    <br />
                </div>

                <div class="col-lg-4">
                    <input class="form-control" placeholder="tag users" type="text" id="txtUsers" name="" />
                </div>
                <div class="col-lg-12">
                    <br />
                    <div id="usersGroup"></div>
                    <table id="tblUsers">
                        <tr id="rowUsers"></tr>
                    </table>
                    <br />
                    <input type="text" id="txtUserTags" name="txtUserTags" hidden />
                </div>
                <br>

                <div class="col-lg-12">
                    @if (Model == null)
                    {
                        <button id="submitAnnouncement" class="btn btn-primary" type="submit" name="submitType" value="PostAnnouncement">Post Announcement</button>
                    }
                    else if (Model != null && Model.announcementId == 0)
                    {
                        <button id="submitAnnouncement" class="btn btn-primary" type="submit" name="submitType" value="PostAnnouncement">Post Announcement</button>
                    }
                    else if (Model.announcementId > 0)
                    {
                        <button id="updateAnnouncement" class="btn btn-primary" type="submit" name="submitType" value="UpdateAnnouncement">Update</button>
                        <button id="cancelUpdateAnnouncement" class="btn btn-primary" type="submit" name="submitType" value="CancelUpdateAnnouncement">Cancel</button>
                    }
                </div>
                <div class="col-lg-12 col-12">
                    <br />
                </div>
            </div>
            <div class="col-lg-3"></div>
        </form>
    </div>
}